// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlatformCourse.WebApi.Data;

namespace PlatformCourse.WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210326212328_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12");

            modelBuilder.Entity("PlatformCourse.WebApi.Models.Aluno", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CartaoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("CartaoId");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CartaoId = 1,
                            Email = "VitoriaAlvesCosta@armyspy.com",
                            Nome = "Vitoria",
                            Sobrenome = "Alves Costa",
                            Telefone = "5259-9477"
                        },
                        new
                        {
                            id = 2,
                            CartaoId = 2,
                            Email = "AlexSousaPinto@rhyta.com",
                            Nome = "Alex",
                            Sobrenome = "Sousa Pinto",
                            Telefone = "5974-7598"
                        },
                        new
                        {
                            id = 3,
                            CartaoId = 3,
                            Email = "LaraFerreiraBarros@armyspy.com",
                            Nome = "Lara",
                            Sobrenome = "Ferreira Barros",
                            Telefone = "4850-9411"
                        },
                        new
                        {
                            id = 4,
                            CartaoId = 4,
                            Email = "RenanRochaOliveira@rhyta.com",
                            Nome = "Renan",
                            Sobrenome = "Rocha Oliveira",
                            Telefone = "2384-4677"
                        });
                });

            modelBuilder.Entity("PlatformCourse.WebApi.Models.AlunoCurso", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlunoId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("AlunosCursos");

                    b.HasData(
                        new
                        {
                            AlunoId = 1,
                            CursoId = 2
                        },
                        new
                        {
                            AlunoId = 2,
                            CursoId = 1
                        },
                        new
                        {
                            AlunoId = 3,
                            CursoId = 2
                        },
                        new
                        {
                            AlunoId = 2,
                            CursoId = 2
                        },
                        new
                        {
                            AlunoId = 3,
                            CursoId = 4
                        },
                        new
                        {
                            AlunoId = 1,
                            CursoId = 3
                        },
                        new
                        {
                            AlunoId = 2,
                            CursoId = 3
                        });
                });

            modelBuilder.Entity("PlatformCourse.WebApi.Models.Cartao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CVC")
                        .HasColumnType("TEXT");

                    b.Property<string>("numero")
                        .HasColumnType("TEXT");

                    b.Property<string>("vencimento")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cartoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CVC = "754",
                            numero = "5369 3512 5614 9320",
                            vencimento = "26/08/2022"
                        },
                        new
                        {
                            Id = 2,
                            CVC = "570",
                            numero = "5449 1767 6344 0266",
                            vencimento = "26/11/2021"
                        },
                        new
                        {
                            Id = 3,
                            CVC = "854",
                            numero = "5277 5975 2779 7914",
                            vencimento = "26/09/2022"
                        },
                        new
                        {
                            Id = 4,
                            CVC = "413",
                            numero = "5370 9134 5448 2295",
                            vencimento = "26/01/2023"
                        });
                });

            modelBuilder.Entity("PlatformCourse.WebApi.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("TutorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("desconto")
                        .HasColumnType("INTEGER");

                    b.Property<float>("preco")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("TutorId");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Fisioterapia",
                            TutorId = 3,
                            desconto = 0,
                            preco = 500f
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Psicologia",
                            TutorId = 2,
                            desconto = 10,
                            preco = 350f
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Gestão da Informação",
                            TutorId = 1,
                            desconto = 0,
                            preco = 550f
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Tecnologia da Informação (TI)",
                            TutorId = 4,
                            desconto = 0,
                            preco = 250f
                        });
                });

            modelBuilder.Entity("PlatformCourse.WebApi.Models.Tutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tutores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Kaua Melo Lima"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Antônio Santos Rodrigues"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Vitor Ribeiro Rocha"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Caio Correia Almeida"
                        });
                });

            modelBuilder.Entity("PlatformCourse.WebApi.Models.Aluno", b =>
                {
                    b.HasOne("PlatformCourse.WebApi.Models.Cartao", null)
                        .WithMany("Alunos")
                        .HasForeignKey("CartaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlatformCourse.WebApi.Models.AlunoCurso", b =>
                {
                    b.HasOne("PlatformCourse.WebApi.Models.Aluno", "aluno")
                        .WithMany("AlunosCursos")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlatformCourse.WebApi.Models.Curso", "curso")
                        .WithMany("AlunosCursos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlatformCourse.WebApi.Models.Curso", b =>
                {
                    b.HasOne("PlatformCourse.WebApi.Models.Tutor", "tutor")
                        .WithMany("Cursos")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
